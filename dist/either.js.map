{"version":3,"sources":["../src/either.js"],"names":["createEither","input","newEither","isEither","of","Number","isNaN","left","stack","hasLeft","map","right","toString","isLeft","JSON","stringify","fn","err","ifLeft","Error","eitherFlow","fns","applier","reduce","prev","curr","errorFn","debug","functionCall","eitherDebug","temp","console","log","split"],"mappings":"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","file":"either.js","sourcesContent":["import {\n    isError,\n    isFunction,\n    isNull,\n    isUndefined\n} from \"lodash/fp\";\n\nfunction createEither(input) {\n    const newEither = {};\n    newEither.isEither = true;\n    newEither.of = function(input) {\n        if (input && input.isEither) {\n            return input;\n        }\n        if (isError(input) || isNull(input) || Number.isNaN(input) || isUndefined(input)) {\n            newEither.left = (isError(input)) ? input.stack : input;\n            newEither.hasLeft = true;\n            return newEither;\n        }\n        if (isFunction(input)) {\n            return newEither.map(input);\n        }\n        newEither.right = input;\n        return newEither;\n    };\n    newEither.toString = () => (newEither.isLeft()) ? `Either(Left(${newEither.left}))` :\n        `Either(Right(${JSON.stringify(newEither.right)}))`;\n    newEither.isLeft = () => !!newEither.hasLeft;\n    newEither.map = function(fn) {\n        if (newEither.isLeft()) {\n            return newEither;\n        }\n        try {\n            return createEither(fn(newEither.right));\n        } catch (err) {\n            return createEither(err);\n        }\n    };\n    newEither.ifLeft = function(input) {\n        if (newEither.isLeft()) {\n            if (isFunction(input)) {\n                if (newEither.left) {\n                    return input(newEither.left);\n                }\n                return input(newEither.of(new Error(\"Either is a Left()\")).left);\n            }\n            return input;\n        }\n        return newEither.right;\n    };\n    return newEither.of(input);\n}\n\nfunction eitherFlow(...fns) {\n    const applier = (input) => fns.reduce(\n        (prev, curr) => prev.map(curr), createEither(input)\n    );\n    applier.ifLeft = (errorFn) => (input) => applier(input).ifLeft(errorFn);\n    return applier;\n}\n\neitherFlow.debug = function(...fns) {\n    let functionCall = 0;\n    const applier = (input) => fns.reduce(\n        function(prev, curr) {\n            const eitherDebug = \"Either Debug - \";\n            const temp = prev.map(curr);\n            if (prev.isLeft()) {\n                console.log(eitherDebug + \"Either is a Left(). Bypassing \", curr.toString().split(\"\\n\")[0]);\n            } else {\n                functionCall = functionCall + 1;\n                console.log(`${eitherDebug}Call #${functionCall}`);\n                console.log(`${eitherDebug}Current value=${prev.toString()}`);\n                console.log(`${eitherDebug}Next function=${curr}`);\n                console.log(`${eitherDebug}New value=${temp.toString()}`);\n            }\n            return temp;\n        }, createEither(input)\n    );\n    applier.ifLeft = (errorFn) => (input) => applier(input).ifLeft(errorFn);\n    return applier;\n};\n\nexport {\n    createEither,\n    eitherFlow\n};\n"]}