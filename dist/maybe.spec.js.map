{"version":3,"sources":["../src/maybe.spec.js"],"names":["m","__filename","name","assertions","when","should","test","t","testedModule","equal","createMaybe","isNothing","end","undefined","NaN","Error","something","isMaybe","value","toString","nothing","map","throwFnHO","newSomething","s","newNothing","orElse","maybeFlow","a","b","applier"],"mappings":"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","file":"maybe.spec.js","sourcesContent":["import {\n    executeTests,\n    prepareForTests,\n    utilityFunctions\n} from \"../tests/unit-tests.js\";\n\nconst m = prepareForTests(__filename);\n\nexecuteTests(\"Maybe implementation\", [{\n    name: \"createMaybe() - Creating a Maybe\",\n    assertions: [{\n        when: \"called without any input\",\n        should: \"return a Maybe(Nothing)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(\n                testedModule.createMaybe().isNothing(),\n                true\n            );\n            t.end();\n        })\n    }, {\n        when: \"called with any null type\",\n        should: \"return a Maybe(Nothing)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(testedModule.createMaybe(null).isNothing(), true, \"Ok for null\");\n            t.equal(testedModule.createMaybe(undefined).isNothing(), true, \"Ok for undefined\");\n            t.equal(testedModule.createMaybe(NaN).isNothing(), true, \"Ok for NaN\");\n            t.end();\n        })\n    }, {\n        when: \"called with any non-null type\",\n        should: \"return a Maybe(Something)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(testedModule.createMaybe(\"foo\").isNothing(), false, \"Ok for strings\");\n            t.equal(testedModule.createMaybe(123).isNothing(), false, \"Ok for numbers\");\n            t.equal(testedModule.createMaybe([]).isNothing(), false, \"Ok for arrays\");\n            t.equal(testedModule.createMaybe({}).isNothing(), false, \"Ok for objects\");\n            t.end();\n        })\n    }, {\n        when: \"called with an Error\",\n        should: \"return a Maybe(Nothing)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(\n                testedModule.createMaybe(new Error(\"DERP\")).isNothing(),\n                true\n            );\n            t.end();\n        })\n    }, {\n        when: \"called with a Maybe\",\n        should: \"return the same Maybe\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const something = testedModule.createMaybe();\n            t.equal(\n                testedModule.createMaybe(something),\n                something\n            );\n            t.end();\n        })\n    }, {\n        when: \"called with a Function\",\n        should: \"return a Maybe wrapping the given function application on 'undefined'\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const something = testedModule.createMaybe(() => \"foo\");\n            t.equal(something.isMaybe, true);\n            t.equal(something.isNothing(), false);\n            t.equal(something.value, \"foo\");\n            t.end();\n        })\n    }]\n}, {\n    name: \"createMaybe() - Using a Maybe\",\n    assertions: [{\n        when: \"a Maybe has its toString method called\",\n        should: \"return a string\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(typeof testedModule.createMaybe(\"foo\").toString(), \"string\");\n            t.equal(typeof testedModule.createMaybe().toString(), \"string\");\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Nothing) has its map method called with any function\",\n        should: \"return the same Maybe(Nothing) without invoking the mapping function\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const nothing = testedModule.createMaybe();\n            t.equal(\n                nothing.map(utilityFunctions.throwFnHO(\"I shan't be thrown !\")),\n                nothing\n            );\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Something) has its map method called with any succeeding function\",\n        should: \"return a new Maybe wrapping the application result of given function onto its Something\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const something = testedModule.createMaybe(\"foo\");\n            const newSomething = something.map((s) => s + \"bar\");\n            t.equal(newSomething.isMaybe, true, \"Applying map() results in a Maybe\");\n            t.equal(newSomething === something, false, \"A different Maybe instance\");\n            t.equal(newSomething.value, \"foobar\", \"Its content is the function application\");\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Something) has its map method called with any failing function\",\n        should: \"return a new Maybe(Nothing)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const something = testedModule.createMaybe(\"foo\");\n            const newNothing = something.map(utilityFunctions.throwFnHO(\"DERP\"));\n            t.equal(newNothing.isMaybe, true, \"Applying map() results in a Maybe\");\n            t.equal(newNothing === something, false, \"A different Maybe instance\");\n            t.equal(newNothing.isNothing(), true, \"Resulting Maybe is a Maybe(Nothing)\");\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Something) has its orElse method called, regardless of given input\",\n        should: \"return the wrapped Something\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const something = testedModule.createMaybe(\"foo\");\n            t.equal(\n                something.orElse(utilityFunctions.throwFnHO(\"I shan't be thrown !\")),\n                \"foo\"\n            );\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Nothing) has its orElse method called with a function\",\n        should: \"return the result of given function called without any parameter\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const nothing = testedModule.createMaybe();\n            t.equal(\n                nothing.orElse(() => \"foo\"),\n                \"foo\"\n            );\n            t.end();\n        })\n    }, {\n        when: \"a Maybe(Nothing) has its orElse method called with anything else than function\",\n        should: \"return the given input\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const nothing = testedModule.createMaybe();\n            t.equal(\n                nothing.orElse(\"foo\"),\n                \"foo\"\n            );\n            t.end();\n        })\n    }]\n}, {\n    name: \"maybeFlow()\",\n    assertions: [{\n        when: \"called with no function list\",\n        should: \"return a function that returns a Maybe\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(\n                testedModule.maybeFlow()().isMaybe,\n                true\n            );\n            t.end();\n        })\n    }, {\n        when: \"called with a function list\",\n        should: \"return a function that will apply all functions of given list on a given Maybe(Something)\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            t.equal(\n                testedModule.maybeFlow(\n                    (a) => a + \"bar\",\n                    (b) => b + \"qux\"\n                )(\"foo\").orElse(),\n                \"foobarqux\"\n            );\n            t.end();\n        })\n    }, {\n        when: \"called with a function list\",\n        should: \"return a function that has an orElse property which is a shortcut to the resulting Maybe.orElse method\",\n        test: (test) => test(function(t) {\n            const testedModule = m({});\n            const applier = testedModule.maybeFlow(\n                    (a) => a + \"bar\",\n                    (b) => b + \"qux\"\n                ).orElse();\n            t.equal(\n                applier(\"foo\"),\n                \"foobarqux\"\n            );\n            t.end();\n        })\n    }]\n}]);\n"]}